@model LogiTrack.Core.ViewModels.Driver.DriverDashboardViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Driver Dashboard</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">
    <script src="~/js/site.js"></script>
    <style>    
        body {
            font-family: 'Roboto', sans-serif;
        }

        .cards-container {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .card {
            display: flex;
            align-items: center;
            background-color: white;
            box-shadow: 0 0 25px 1px #0000000f !important;
            width: calc((100% - 40px) / 3);
            padding: 10px;
            height: 90px;
        }

        .card-icon {
            width: 60px;
            height: 60px;
            border-radius: 3px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 10px;
        }

            .card-icon img {
                width: 50px;
                height: auto;
            }

        .card-content {
            flex-grow: 1;
            padding: 0 10px;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .card h3 {
            margin: 0;
            font-size: 1rem;
            color: #404040;
        }

        .card p {
            margin: 0;
            font-size: 1.12rem;
            color: #404040;
        }

        .card-button {
            background-color: #1e87f0;
            padding: 3px 7px;
            color: white;
            border: none;
            border-radius: 20px;
            text-align: center;
            text-decoration: none;
            cursor: pointer;
            font-size: 0.75rem;
            margin-bottom: 14px;
            font-weight: 200;
        }

            .card-button:hover {
                background-color: #167ac4;
            }

        .card-button-info {
            display: flex;
            flex-direction: column;
            margin-bottom: 20px;
            margin-right: 5px;
        }

            .card-button-info p {
                font-size: 0.85rem;
                margin-top: 48px;
                opacity: 0.5;
            }
        .diagrams {
            display: flex;
            gap: 20px;
        }

        .diagram {
            background-color: white;
            padding: 15px;
            box-shadow: 0 0 25px 1px #0000000f !important;
            flex: 1;
            height: 420px;
        }

        .diagram-header {
            display: flex;
            gap: 30px;
            align-items: center;
        }

            .diagram-header h3 {
                font-size: 1.1rem;
                color: #00aa87;
                letter-spacing: revert;
            }

        .see-all {
            text-decoration: underline;
            color: #707070;
            font-size: 14px;
        }

        .delivery {
            display: flex;
            gap: 70px;
            align-items: center;
            margin-top: 10px;
            margin-bottom: 15px;
        }

        .delivery-info {
            display: flex;
            align-items: center;
            font-size: 0.85rem;
        }

            .delivery-info p {
                margin: 0;
            }

            .delivery-info .ref-number {
                font-weight: bold;
            }

        .addresses {
            margin-left: 10px;
            font-size: 14px;
        }

        .client-company {
            font-size: 14px;
        }

        .road-icon {
            width: 35px;
            height: 35px;
            margin: 0 10px;
        }

        .pickup-address,
        .delivery-address {
            margin: 0;
        }

        .ref-num {
            text-decoration: none;
            color: black;
            text-rendering: optimizelegibility;
        }

        .diagram-button {
            display: block;
            color: #00aa87;
            border: 1px solid #00aa87;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-top: 50px;
            text-align: center;
            font-size: 0.8rem;
            width: 90%;
            text-decoration: none;
        }
    </style>

</head>

<body>
    <header class="header">
        <div class="logo-name">
            <div class="company-logo">
                <img src="https://via.placeholder.com/50" alt="Company Logo">
            </div>
            <div class="company-name">LogiTrack</div>
        </div>
        <div class="profile-dropdown">
            <button onclick="toggleDropdown()">
                <i class="bi bi-person-circle"></i>
                <span class="arrow">&#x25BC;</span> 
            </button>
            <div class="profile-dropdown-menu" id="profileDropdown">
                <a asp-action="Details" asp-controller="Driver">Personal details</a>
                <a asp-action="LicenseDetails" asp-controller="Driver">License</a>
                <a asp-action="Logout" asp-controller="Home">Logout</a>
            </div>
        </div>
    </header>
    <aside class="sidebar">
        <ul>
            <li><a asp-action="Dashboard" asp-controller="Driver"><i class="bi bi-house-door"></i> Dashboard</a></li>
            <li>
                <a asp-action="SearchDelivery" asp-controller="Driver"><i class="bi bi-journal"></i> New Delivery</a>
            </li>
            <li>
                <a asp-action="SearchDeliveries" asp-controller="Driver"><i class="bi bi-truck"></i> Deliveries</a>
            </li>
        </ul>
    </aside>
    <div class="main-content">
        <div class="cards-container">
            <div class="card" id="locationCard">
                <div class="card-icon">
                    <img src="https://via.placeholder.com/50" alt="Location Icon">
                </div>
                <div class="card-content">

                    <h3>LOCATION</h3>
                    <p id="location" style="font-size:0.9rem;">Fetching location...</p>
                    @*<p id="currentTime">Current Time: Fetching...</p>*@
                </div>
                <div class="card-button-info">
                    <button class="card-button" onclick="getCurrentLocation()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z" />
                            <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466" />
                        </svg>
                    </button>
                </div>

            </div>
            <div class="card">
                <div class="card-icon">
                    <img src="~/132-1325275_mini-van-delivery-express-mail-vehicle-svg-png.png" alt="Icon 1">
                </div>
                <div class="card-content">
                    <h3>NEW DELIVERIES</h3>
                    <p><b>@Model.NewDeliveriesCount</b></p>
                </div>
                <div class="card-button-info">
                    <a asp-action="SearchDeliveries" asp-controller="Driver" class="card-button"><b>SEE ALL</b></a>
                </div>

            </div>
            <div class="card">
                <div class="card-icon" style="background-color: orangered;">
                    <img src="~/measure-kilometer.svg" alt="Icon 2">
                </div>
                <div class="card-content">
                    <h3>KILOMETERS</h3>
                    <p><b>@Model.KilometersDriven</b></p>
                </div>
                <div class="card-button-info">
                    <p>@Model.KilometersDrivenlastMonth last month</p>
                </div>

            </div>

        </div>
        <div class="diagrams">
            <div class="diagram">
                <div class="diagram-header">
                    <h3>Deliveries</h3>
                    <a asp-action="SearchDeliveries" asp-controller="Driver" class="see-all">See all</a>
                </div>
                @foreach (var item in Model.LastDeliveries)
                {
                    <div class="delivery">
                        <div class="delivery-info">
                            <a asp-action="DeliveryDetails" asp-controller="Driver" asp-route-id="@item.Id" class="ref-num">@item.ReferenceNumber</a>
                            <img src="~/dashboard_books_dots.svg" alt="Road" class="road-icon">
                            <div class="addresses">
                                <p class="pickup-address">@item.PickupAddress</p>
                                <p class="delivery-address">@item.DeliveryAddress</p>
                            </div>
                        </div>
                        <p class="client-company">@item.ClientCompanyName</p>
                    </div>
                }

            </div>

            <div class="diagram">
                <div class="diagram-header">
                    <h3>New Deliveries</h3>
                    <a asp-action="NewDeliveries" asp-asp-controller="Driver" class="see-all">See all</a>
                </div>
                @foreach (var item in Model.NewDeliveries)
                {
                    <div class="delivery">
                        <div class="delivery-info">
                            <a asp-action="DeliveryDetails" asp-asp-controller="Driver" asp-route-id="@item.Id" class="ref-num">@item.ReferenceNumber</a>
                            <img src="~/dashboard_books_dots.svg" alt="Road" class="road-icon">
                            <div class="addresses">
                                <p class="pickup-address">@item.PickupAddress</p>
                                <p class="delivery-address">@item.DeliveryAddress</p>
                            </div>
                        </div>
                        <p class="client-company">@item.ClientCompanyName</p>
                    </div>
                    <a asp-controller="Driver" asp-action="SearchDelivery" class="diagram-button"><b>Add status</b></a>
                }
            </div>
        </div>
    </div>

    <script>
        async function getCurrentLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            } else {
                document.getElementById('location').textContent = "Geolocation is not supported by this browser.";
            }
        }

        function showPosition(position) {
            const lat = position.coords.latitude;
            const long = position.coords.longitude;
            fetchLocation(lat, long);
        }

        async function fetchLocation(lat, long) {
            const apiKey = 'test';
            const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${apiKey}`;

            try {
                const response = await fetch(url);
                const data = await response.json();

                if (data.results && data.results.length > 0) {
                    const address = data.results[0].formatted_address;
                    document.getElementById('location').textContent = address;
                } else {
                    document.getElementById('location').textContent = "Unable to retrieve location.";
                }
            } catch (error) {
                console.error("Error fetching location:", error);
                document.getElementById('location').textContent = "Error fetching location.";
            }

            showCurrentTime();
        }

        function showCurrentTime() {
            const now = new Date();
            const options = { timeZone: 'Europe/Sofia', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };
            const timeString = now.toLocaleTimeString('en-US', options);
            document.getElementById('currentTime').textContent = `Current Time: ${timeString}`;
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    document.getElementById('location').textContent = "User denied the request for Geolocation.";
                    break;
                case error.POSITION_UNAVAILABLE:
                    document.getElementById('location').textContent = "Location information is unavailable.";
                    break;
                case error.TIMEOUT:
                    document.getElementById('location').textContent = "The request to get user location timed out.";
                    break;
                case error.UNKNOWN_ERROR:
                    document.getElementById('location').textContent = "An unknown error occurred.";
                    break;
            }
        }

        window.onload = getCurrentLocation;
    </script>

</body>

</html>
