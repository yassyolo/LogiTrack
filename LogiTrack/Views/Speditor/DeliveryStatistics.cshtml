@model LogiTrack.Core.ViewModels.Delivery.DeliveryStatisticsForLogisticsViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Driver Dashboard</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="~/js/site.js"></script>
    <style>
        .card h3 {
            margin: 0;
            font-size: 1.1rem;
            color: #00aa87;
        }

        .chart-container {
            background-color: white;
            width: 100%;
            max-width: 1100px;
            margin: 0 auto;
        }

        .chart {
            flex: 1;
            max-width: 300px;
            max-height: 400px;
        }

        .monthy-deliveries {
            flex: 1;
            max-width: 500px;
            height: 500px;
            margin-top: 50px;
        }

        .first-row {
            display: flex;
            justify-content: space-between;
            width: 100%;
            max-width: 1000px;
        }

        .chart-container, .delay-time-container {
            padding: 10px;
        }

        h4, .stat-text {
            text-align: center;
            color: #00aa87;
        }

        .delay {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }
    </style>

</head>

<body>
    <header class="header">
        <div class="logo-name">
            <div class="company-logo">
                <img src="https://via.placeholder.com/50" alt="Company Logo">
            </div>
            <div class="company-name">LogiTrack</div>
        </div>
        <div class="profile-dropdown">
            <button onclick="toggleDropdown()">
                <i class="bi bi-person-circle"></i>
                <span class="arrow">&#x25BC;</span>
            </button>
            <div class="profile-dropdown-menu" id="profileDropdown">
                <a asp-action="Details" asp-controller="Driver">Personal details</a>
                <a asp-action="LicenseDetails" asp-controller="Driver">License</a>
                <a asp-action="Logout" asp-controller="Home">Logout</a>
            </div>
        </div>
    </header>
    <aside class="sidebar">
        <ul>
            <li>
                <a asp-action="Dashboard" asp-controller="Logistics">
                    <i class="bi bi-house-door"></i> Dashboard
                </a>
            </li>
            <li>
                <a href="#">
                    <i class="bi bi-people"></i> Clients <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="GetPendingRegistrations" asp-controller="Logistics"><i class="bi bi-person-plus"></i> New registrations</a></li>
                        <li><a asp-action="ClientsRegister" asp-controller="Logistics"><i class="bi bi-journal-text"></i> Clients register</a></li>
                        <li><a asp-action="SearchCompany" asp-controller="Logistics"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="ClientsStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart-line"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="VehiclesRegister" asp-controller="Logistics">
                    <i class="bi bi-truck"></i> Vehicles <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchVehicle" asp-controller="Logistics"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="VehiclesRegister" asp-controller="Logistics"><i class="bi bi-list-task"></i> Vehicles Register</a></li>
                        <li><a asp-action="VehicleStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="DriversRegister" asp-controller="Logistics">
                    <i class="bi bi-person-badge"></i> Drivers <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchDriver" asp-controller="Logistics"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="DriversRegister" asp-controller="Logistics"><i class="bi bi-people-fill"></i> Drivers Register</a></li>
                        <li><a asp-action="DriverStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart-line"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="RequestsRegister" asp-controller="Logistics">
                    <i class="bi bi-card-list"></i> Requests <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchRequest" asp-controller="Logistics"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="RequestsRegister" asp-controller="Logistics"><i class="bi bi-journal"></i> Requests Register</a></li>
                        <li><a asp-action="RequestsStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="OffersRegister" asp-controller="Logistics">
                    <i class="bi bi-file-earmark-text"></i> Offers <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchOffer" asp-controller="Logistics"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="OffersRegister" asp-controller="Logistics"><i class="bi bi-journal-text"></i> Offers Register</a></li>
                        <li><a asp-action="OfferStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="DeliveriesRegister" asp-controller="Logistics">
                    <i class="bi bi-box-seam"></i> Deliveries <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchDelivery" asp-controller="Logistics"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="DeliveriesRegister" asp-controller="Logistics"><i class="bi bi-journal"></i> Deliveries Register</a></li>
                        <li><a asp-action="DeliveryStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="InvoicesRegister" asp-controller="Logistics">
                    <i class="bi bi-receipt"></i> Invoices register <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="InvoicesRegister" asp-controller="Logistics"><i class="bi bi-journal"></i> Invoices Register</a></li>
                        <li><a asp-action="InvoicesStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart-line"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="SearchCashRegisters" asp-controller="Logistics">
                    <i class="bi bi-cash-stack"></i> Cash registers <span class="arrow">></span>
                </a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchCashRegisters" asp-controller="Logistics"><i class="bi bi-journal"></i> Cash Register</a></li>
                        <li><a asp-action="CashRegisterStatistics" asp-controller="Logistics"><i class="bi bi-bar-chart-line"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
        </ul>
    </aside>
    <div class="main-content">
        <div class="chart-container">
            <div class="cards-container">
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Deliveries</h3>
                        <p><b>@Model.TotalDeliveries</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Undelivered</h3>
                        <p><b>@Model.UndeliveredDeliveries</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Kilometers</h3>
                        <p><b>@Model.KiloMetersDriven KM</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>CO2 emissions</h3>
                        <p><b>@Model.CO2Emissions M3</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Profit/Loss</h3>
                        <p><b>@Model.Profit BGN/@Model.Loss BGN</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Average distance</h3>
                        <p><b>@Model.AverageDeliveryDistance KM</b></p>
                    </div>
                </div>
            </div>

            <div class="first-row">
                <div class="chart-container">
                    <h4>Delivery types ratio</h4>
                    <canvas id="deliveryChart" class="chart"></canvas>
                </div>
                <div class="chart-container">
                    <h4>Deliveries made on time</h4>
                    <div class="delay">
                        <canvas id="successRateChart" class="chart"></canvas>
                        <p style="color: #00aa87; width: 100px;" id="averageDelay" class="stat-text"></p>
                    </div>
                </div>
            </div>
            <div class="first-row">
                <div class="chart-container">
                <h4>Last year deliveries</h4>
                <canvas id="monthlyDeliveryChart" class="chart" style="width: 300px;"></canvas>
            </div>
                <div class="chart-container">
                <h4>Most popular delivery destinations</h4>
                <canvas id="popularCitiesChart" class="chart"></canvas>
            </div>
            </div>
            <div class="chart-container">
                <h4>Delivery ratings</h4>
                <canvas id="deliveryRatingsChart" class="chart"></canvas>

            </div>

        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        async function fetchDeliveryCounts() {
            try {
                const response = await fetch('/Logistics/GetDestinationTypes');
                const data = await response.json();

                const domesticCount = data.domestic ?? 0;
                const internationalCount = data.international ?? 0;

                const ctx = document.getElementById('deliveryChart').getContext('2d');
                const deliveryChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ['Domestic', 'International'],
                        datasets: [{
                            label: 'Deliveries',
                            data: [domesticCount, internationalCount],
                            backgroundColor: ['#00aa87', '#FF6384'],
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                            }
                        }
                    }
                });

            } catch (error) {
                console.error('Error fetching delivery counts:', error);
            }
        }
        async function fetchMonthlyDeliveries() {
            try {
                const response = await fetch('/Logistics/GetDeliveryCounts');
                const data = await response.json();

                console.log('Fetched data:', data);

                const ctx = document.getElementById('monthlyDeliveryChart').getContext('2d');
                const monthlyDeliveryChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.months,
                        datasets: [{
                            label: 'Deliveries per Month',
                            data: data.deliveries,
                            backgroundColor: '#FF6384',
                            borderColor: '#00aa87',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return 'Deliveries: ' + tooltipItem.raw;
                                    }
                                }
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error fetching monthly deliveries:', error);
            }
        }
        async function fetchDeliverySuccessRate() {
            try {
                const response = await fetch('/Logistics/GetDestinationTypes');
                const data = await response.json();

                const successRate = data.successRate || 0;
                const failureRate = 100 - successRate;
                const averageDelay = data.averageDelay || 0;

                const ctx = document.getElementById('successRateChart').getContext('2d');
                new Chart(ctx, {
                    type: 'radar',
                    data: {
                        labels: ['Success', 'Failure'],
                        datasets: [{
                            label: 'Delivery Rates',
                            data: [successRate, failureRate],
                            backgroundColor: '#00aa87',
                            borderColor: '#00aa87',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            r: {
                                angleLines: {
                                    display: true
                                },
                                beginAtZero: true
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                            }
                        }
                    }
                });

                document.getElementById('averageDelay').innerText =
                    `Average delay time: ${averageDelay.toFixed(2)} hrs`;

            } catch (error) {
                console.error('Error fetching delivery success rate:', error);
            }
        }
        async function renderPopularCitiesHeatmap() {
            try {
                const response = await fetch('/Logistics/GetPopularDeliveryCities');
                if (!response.ok) {
                    console.error(`Failed to fetch popular cities: ${response.status}`);
                    console.error(await response.text());
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();

                const cities = data.map(item => item.city || 'Unknown');
                const deliveryCounts = data.map(item => item.deliveryCount || 0);

                const ctx = document.getElementById('popularCitiesChart').getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: cities,
                        datasets: [
                            {
                                label: 'Delivery Count',
                                data: deliveryCounts,
                                backgroundColor: deliveryCounts.map(count => `#FF6384`),
                                borderColor: '#FF6384',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return `Deliveries: ${tooltipItem.raw}`;
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Number of Deliveries'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Cities'
                                }
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error rendering Popular Cities Heatmap:', error);
            }
        }
        async function renderDeliveryRatingsChart() {
            try {
                const response = await fetch('/Logistics/GetDeliveryRatingsDistribution');
                if (!response.ok) {
                    console.error(`Failed to fetch delivery ratings: ${response.status}`);
                    console.error(await response.text());
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();

                const ratings = data.map(item => `Rating ${item.rating} Stars`);
                const counts = data.map(item => item.count);

                const canvas = document.getElementById('deliveryRatingsChart');
                if (!canvas) {
                    console.error('Canvas element with ID "deliveryRatingsChart" not found.');
                    return;
                }
                const ctx = canvas.getContext('2d');

                new Chart(ctx, {
                    type: 'pie', 
                    data: {
                        labels: ratings,
                        datasets: [
                            {
                                label: 'Number of Deliveries',
                                data: counts,
                                backgroundColor: [
                                    '#FF6384', '#00aa87', '#ffe135', '#9ee37d', '#45a29e'
                                ],
                                borderColor: '#ffffff',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top' 
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return `${tooltipItem.label}: ${tooltipItem.raw} Deliveries`;
                                    }
                                }
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error rendering Delivery Ratings Chart:', error);
            }
        } 
        fetchDeliverySuccessRate();
        fetchMonthlyDeliveries();
        fetchDeliveryCounts();
        renderPopularCitiesHeatmap();
        renderDeliveryRatingsChart();
    </script>

</body>

</html>


