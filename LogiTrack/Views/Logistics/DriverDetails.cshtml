@model LogiTrack.Core.ViewModels.Driver.DriverForLogisticsViewModel
@{
    ViewData["Title"] = "Add Cash Register";
    Layout = "~/Views/Shared/_LogisticsLayout.cshtml";
}
<div class="delivery-details-container">
    <div class="details-card">
        <div class="details-header">
            <div class="delivery-image">
                <i class="bi bi-person-circle " style="font-size: 40px; color:#00aa87;"></i>
            </div>
            <h3><b>@Model.Name</b></h3>
        </div>

        <div class="button-tabs">
            <button class="tab-button" id="infoBtn">INFO</button>
            <button class="tab-button" id="licenseBtn">LICENSE</button>
            <button class="tab-button" id="deliveriesBtn">DELIVERIES</button>
            <button class="tab-button" id="statisticsBtn">STATISTICS</button>
        </div>

        <div id="vehicleSection" class="section d-none">
            <h4><b>General details</b></h4>
            <div class="column-container">
                <div class="column">
                    <p><strong>Name:</strong> @Model.Name</p>
                    <p><strong>Age:</strong> @Model.Age</p>
                    <p><strong>Preferences:</strong> @Model.Preferrences</p>
                    <p><strong>Username:</strong> @Model.Username</p>
                    <p><strong>Phone number:</strong> @Model.PhoneNumber</p>
                </div>
            </div>
            <div class="divider-line"></div>

            <h4><b>Experience</b></h4>
            <div class="contact-container">

                <p><strong>Years:</strong> @Model.YearOfExperience</p>
                <p><strong>Months:</strong> @Model.MonthsOfExperience</p>
                <p><strong>Salary:</strong> @Model.Salary BGN</p>

            </div>
            <div class="divider-line"></div>
            <h4><b>Status</b></h4>
            <div class="column">
                @if (Model.IsAvailable)
                {
                    <p><strong>Available:</strong><i class="bi bi-check-circle-fill" style="color: #00aa87; margin-top: 10px; margin-left:10px;"></i></p>
                }
                else
                {
                    <p style="color: #00aa87;"><strong>Available:</strong>No</p>
                }
            </div>
        </div>

        <div id="licenseSection" class="section d-none">
            <h4><b>License</b></h4>
            <div class="column-container">
                <div class="column">
                    <p><strong>Number:</strong> @Model.LicenseNumber</p>
                    <p><strong>Expiry date:</strong> @Model.LicenseExpiryDate</p>
                    <p><strong>Days till expiration:</strong> @Model.DaysTillExpiry days</p>
                </div>
            </div>
        </div>

        <div id="addressesSection" class="section d-none">
            <div class="cards-container">
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Deliveries</h3>
                        <p><b>@Model.DeliveriesCount</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Successful</h3>
                        <p><b>@Model.SuccessfulDeliveriesCount</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Current</h3>
                        <p><b>@Model.UndeliveryDeliveriesCount</b></p>
                    </div>
                </div>

            </div>

            <div class="filtered-deliveries-container">
                <div class="delivery-header">
                    <span>Ref No</span>
                    <span>Origin</span>
                    <span>Destination</span>
                    <span>Expected Date</span>
                    <span>Price</span>
                    <span>Delivered</span>
                    <span>Paid</span>
                </div>
                @if (Model.Deliveries.Any())
                {
                    <div class="delivery-list">
                        @foreach (var delivery in Model.Deliveries)
                        {
                            <div class="delivery-card">
                                <div class="delivery-info">
                                    <a asp-action="DeliveryDetails" asp-controller="Logistics" asp-route-id="@delivery.Id" style="text-decoration:none; color:inherit;"><span>@delivery.ReferenceNumber</span></a>
                                    <span class="address">@delivery.PickupAddress</span>
                                    <span class="address">@delivery.DeliveryAddress</span>

                                    <span>@delivery.ExpectedDeliveryDate</span>
                                    <span>@delivery.FinalPrice BGN</span>
                                    <span>
                                        @if (delivery.IsDelivered)
                                        {
                                            <i class="bi bi-check-circle-fill" style="color: #00aa87;"></i>
                                        }
                                    </span>
                                    <span>
                                        @if (delivery.IsPaid)
                                        {
                                            <i class="bi bi-check-circle-fill" style="color: #00aa87;"></i>
                                        }
                                    </span>
                                </div>
                                <div class="delivery-metrics">
                                    <p><b>Packs:</b> @delivery.TotalItems</p>
                                    <p><b>Weight:</b> @delivery.TotalWeight</p>
                                    <p><b>Volume:</b> @delivery.TotalVolume</p>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="no-found">No deliveries found for the driver.</p>
                }
            </div>
        </div>

        <div id="metricsSection" class="section  d-none">
            <div class="chart-container">
                <div class="cards-container">
                    <div class="card" id="locationCard">
                        <div class="card-content">
                            <h3>Kilometers</h3>
                            <p><b>@Model.KiloMetersDriven KM</b></p>
                        </div>
                    </div>
                    <div class="card" id="locationCard">
                        <div class="card-content">
                            <h3>Average distance</h3>
                            <p><b>@Model.AverageDeliveryDistance KM</b></p>
                        </div>
                    </div>
                    <div class="card" id="locationCard">
                        <div class="card-content">
                            <h3>Average time</h3>
                            <p><b>@Model.AverageDeliveryTime hrs</b></p>
                        </div>
                    </div>
                    <div class="card" id="locationCard">
                        <div class="card-content">
                            <h3>Adittional costs</h3>
                            <p><b>@Model.AdditionalCost BGN</b></p>
                        </div>
                    </div>
                    <div class="card" id="locationCard">
                        <div class="card-content">
                            <h3>Average additional cost per delivery</h3>
                            <p><b>@Model.AverageAdditionalCost BGN</b></p>
                        </div>
                    </div>
                </div>

                <h4>Deliveries</h4>
                <div class="first-row">
                    <div class="chart-container">
                        <h4>Delivery types ratio</h4>
                        <canvas id="deliveryChart" class="chart"></canvas>
                    </div>
                    <div class="chart-container">
                        <h4>Deliveries last year</h4>
                        <canvas id="monthlyDeliveryChart" class="chart"></canvas>
                    </div>
                </div>

                <div class="delay-time-container">
                    <h4>Deliveries made on time</h4>
                    <div class="delay">
                        <canvas id="successRateChart" class="chart"></canvas>
                        <p style="color: #00aa87; " id="averageDelay" class="stat-text"></p>
                    </div>
                    < /div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#infoBtn').click(function () {
                showSection('#vehicleSection');
            });
            $('#deliveriesBtn').click(function () {
                showSection('#addressesSection');
            });
            $('#statisticsBtn').click(function () {
                showSection('#metricsSection');
            });
            $('#licenseBtn').click(function () {
                showSection('#licenseSection');
            });

            function showSection(sectionId) {
                $('.section').addClass('d-none');
                $(sectionId).removeClass('d-none');
            }
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            try {
                await fetchDeliveryCounts();
                await fetchMonthlyDeliveries();
                await fetchDeliverySuccessRate();

            } catch (error) {
                console.error("Error during chart rendering:", error);
            }
        });

        async function fetchDeliveryCounts() {
            try {
                const response = await fetch('/Logistics/GetDeliveryTypesForDriver/@Model.Id');
                const data = await response.json();

                const domesticCount = data.domestic ?? 0;
                const internationalCount = data.international ?? 0;

                const ctx = document.getElementById('deliveryChart').getContext('2d');
                new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ['Domestic', 'International'],
                        datasets: [{
                            label: 'Deliveries',
                            data: [domesticCount, internationalCount],
                            backgroundColor: ['#00aa87', '#FF6384'],
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error fetching delivery counts:', error);
            }
        }
        async function fetchMonthlyDeliveries() {
            try {
                const response = await fetch('/Logistics/GetDeliveryCountsForDriver/@Model.Id');
                const data = await response.json();

                while (data.deliveries.length < data.months.length) {
                    data.deliveries.push(0);
                }

                if (window.monthlyDeliveryChart && typeof window.monthlyDeliveryChart.destroy === 'function') {
                    window.monthlyDeliveryChart.destroy();
                }

                const ctx = document.getElementById('monthlyDeliveryChart').getContext('2d');
                window.monthlyDeliveryChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.months,
                        datasets: [{
                            label: 'Deliveries per Month',
                            data: data.deliveries,
                            backgroundColor: '#00aa87',
                            borderColor: '#00aa87',
                            borderWidth: 1,
                            borderSkipped: false
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                ticks: {
                                    autoSkip: false
                                },
                                title: {
                                    display: true,
                                    text: 'Months'
                                }
                            },
                            y: {
                                beginAtZero: true,
                                min: 0,
                                max: 1,
                                ticks: {
                                    stepSize: 1
                                },
                                title: {
                                    display: true,
                                    text: 'Deliveries'
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return 'Deliveries: ' + tooltipItem.raw;
                                    }
                                }
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error fetching monthly deliveries:', error);
            }
        }
        async function fetchDeliverySuccessRate() {
            try {
                const response = await fetch('/Logistics/GetDeliveryTimesForDriver/@Model.Id');
                const data = await response.json();

                const successRate = data.successRate || 0;
                const failureRate = 100 - successRate;
                const averageDelay = data.averageDelay || 0;

                const ctx = document.getElementById('successRateChart').getContext('2d');
                new Chart(ctx, {
                    type: 'radar',
                    data: {
                        labels: ['Success', 'Failure'],
                        datasets: [{
                            label: 'Delivery Rates',
                            data: [successRate, failureRate],
                            backgroundColor: '#FF6384',
                            borderColor: '#FF6384',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            r: {
                                angleLines: {
                                    display: true
                                },
                                beginAtZero: true
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                            }
                        }
                    }
                });

                document.getElementById('averageDelay').innerText =
                    `Average delay time: ${averageDelay.toFixed(2)} hrs`;

            } catch (error) {
                console.error('Error fetching delivery success rate:', error);
            }
        }
    </script>
    <style>
        .delivery-details-container {
            width: 100%;
        }

        .details-card {
            box-shadow: 0 0 15px 1px #0000000f !important;
            padding: 17px;
            background-color: white;
        }

        .details-header {
            display: flex;
            align-items: center;
            margin-bottom: 40px;
        }

        .delivery-image {
            width: 50px;
            height: auto;
        }

        h4 {
            margin: 10px 0;
            color: #00aa87;
            font-size: 1.1rem;
        }

        .contact-container {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            width: 98%;
        }

            .contact-container p {
                font-size: 0.9rem;
                opacity: 90%;
            }

        .divider-line {
            height: 1px;
            background-color: #e0e0e0;
            margin: 10px 0;
        }

        

        .delivery-header {
            display: flex;
            justify-content: space-between;
            background-color: #ffffff;
            padding: 30px;
            font-weight: bold;
            font-size: 0.90rem;
            width: 90%;
        }

        .delivery-card {
            background-color: white;
            font-size: 0.80rem;
            display: flex;
            flex-direction: column;
            transition: background-color 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            .delivery-card:nth-child(even) {
                background-color: #F5F5F7;
            }


        .delivery-metrics {
            display: none;
            margin-top: 10px;
            background-color: #f1f8ff;
            width: 100%;
            transition: background-color 0.3s ease;
        }

            .delivery-metrics p {
                margin-left: 210px;
            }

       
        .address {
            width: 140px;
            flex-wrap: wrap;
        }

        p {
            font-size: 14px;
            color: black;
            opacity: 80%;
        }

        
    </style>


