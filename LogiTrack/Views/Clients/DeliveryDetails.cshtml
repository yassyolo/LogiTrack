@model LogiTrack.Core.ViewModels.Delivery.DeliveryForClientViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Driver Dashboard</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap">
    <link rel="stylesheet" href="~/css/site.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">

    <script src="https://maps.googleapis.com/maps/api/js?key=test"></script>
    <script src="~/js/site.js"></script>
    <style>

        body {
            font-family: 'Roboto', sans-serif;
        }

        .delivery-details-container {
            width: 85%;
        }

        .card {
            box-shadow: 0 0 25px 1px #0000000f !important;
            padding: 17px;
            background-color: white;
        }

        .details-header {
            display: flex;
            align-items: center;
            margin-bottom: 40px;
        }

        .delivery-image {
            width: 50px;
            height: auto;
            margin-right: 20px;
        }

        .details-header h2 {
            font-size: 19px;
            margin: 0;
        }

        h4 {
            margin: 10px 0;
        }

        .button-tabs {
            display: flex;
            border-bottom: 1px solid grey;
            margin-bottom: 15px;
        }

        .tab-button {
            padding: 10px 30px;
            border: none;
            cursor: pointer;
            display: inline-block;
            font-size: 15px;
            transition: background-color 0.3s;
            color: black;
            background-color: white;
        }

            .tab-button:focus,
            .tab-button:active {
                border-bottom: 2px solid #00aa87;
            }

        .btn {
            color: grey;
            border: none;
            cursor: pointer;
            margin: 0 5px;
            transition: background-color 0.3s;
        }

        hr {
            margin-bottom: 15px;
            margin-left: 10px;
        }

        .section {
            display: none;
            margin-left: 25px;
        }

            .section:not(.d-none) {
                display: block;
            }

        .addresses-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        .address-column {
            display: flex;
            flex-direction: column;
        }

            .address-column h5 {
                margin-bottom: 10px;
            }

            .address-column p {
                margin: 5px 0;
            }

        .maps-container {
            display: flex;
            gap: 20px;
            margin-top: 20px;
        }

        .map {
            width: 90%;
            height: 200px;
            background-color: #e0e0e0;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .delivery-steps {
            display: flex;
            align-items: center;
            gap: 30px;
        }

        .step-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .step-dot {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: gray;
        }

            .step-dot.completed {
                background-color: green;
            }

        .step-line {
            width: 3px;
            height: 50px;
            background-color: gray;
            margin: 0 auto;
        }

            .step-line.completed {
                background-color: green;
            }

        .step-text {
            text-align: center;
            margin-top: 8px;
        }

            .step-text img {
                width: 30px;
                height: 30px;
            }


        .movement-history {
            margin-top: 20px;
        }

        .movement-header{
			display: flex;
			flex-direction: row;
			gap: 100px;
        }
        .movement-rows {
            display: flex;
            flex-direction: column;
        }

        .movement-row {
            display: flex;
            align-items: center;
            gap: 40px;
            padding: 10px 0;
        }

        .movement-event {
            display: flex;
            flex-direction: row;
            align-items: center;
            text-align: center;
        }

        .movement-dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: gray;
            margin-right: 2px;
        }

        .event-line {
            width: 2px;
            height: 20px;
            background-color: gray;
            margin-top: 2px;
        }

        .movement-location, .movement-time {
            margin-left: 10px;
        }

        .vehicles-section-header, .address-column h4 {
            display: flex;
            margin-bottom: 20px;
            flex-direction: row;
        }

            .vehicles-section-header h4,
            .address-column h4, .metrics-header h4, .special-instructions h4,
            .status-header h4, .metrics h4 {
                font-size: 20px;
                color: #00aa87;
                font-weight: 500;
            }

        .address-column p, .status-header p {
            font-size: 14px;
            color: black;
            opacity: 80%;
        }

        .address-column strong {
            color: black;
        }

        .metrics-header {
            display: flex;
            flex-direction: row;
            gap: 300px;
            margin-bottom: 20px;
        }

        .status-header {
            display: flex;
            flex-direction: row;
            gap: 180px;
            margin-bottom: 20px;
        }

        .metrics {
            margin-top: 50px;
        }

        .standart-metrics-header-row {
            display: flex;
            flex-direction: row;
            margin-left: 40px;
            gap: 50px;
        }

        .standart-metrics-info-row {
            display: flex;
            flex-direction: row;
            background-color: #fbfbfb;
            margin-left: 40px;
            gap: 100px;
            white-space: nowrap;
            font-weight: 300;
            font-size: 14px;
            opacity: 80%;
        }

        .non-standart-metrics-header-row {
            display: flex;
            flex-direction: row;
            margin-left: 40px;
            gap: 70px;
        }

        .more-header-row {
            display: flex;
            flex-direction: row;
            margin-left: 40px;
            gap: 50px;
        }

        .non-standart-metrics-info-row {
            display: flex;
            flex-direction: row;
            background-color: #fbfbfb;
            margin-left: 40px;
            gap: 100px;
            font-weight: 300;
            font-size: 14px;
            opacity: 80%;
        }

        .more-info-row {
            display: flex;
            flex-direction: row;
            background-color: #fbfbfb;
            margin-left: 40px;
            gap: 60px;
            font-weight: 300;
            font-size: 14px;
            opacity: 80%;
        }

    </style>

</head>

<body>
    <header class="header">
        <div class="logo-name">
            <div class="company-logo">
                <img src="https://via.placeholder.com/50" alt="Company Logo">
            </div>
            <div class="company-name">LogiTrack</div>
        </div>
        <div class="profile-dropdown">
            <button onclick="toggleDropdown()">
                <i class="bi bi-person-circle"></i>
                <span class="arrow">&#x25BC;</span>
            </button>
            <div class="profile-dropdown-menu" id="profileDropdown">
                <a asp-action="CompanyDetails" asp-controller="Clients">Company details</a>
                <a asp-action="ContactDetails" asp-controller="Clients">Contact details</a>
                <a asp-action="Logout" asp-controller="Home">Logout</a>
            </div>
        </div>
    </header>
    <aside class="sidebar">
        <ul>
            <li><a asp-action="Dashboard" asp-controller="Clients"><i class="bi bi-house-door"></i> Dashboard</a></li>
            <li>
                <a asp-action="MyRequests" asp-controller="Clients"><i class="bi bi-money"></i> Requests <span class="arrow">></span></a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="MakeRequest" asp-controller="Clients">New</a></li>
                        <li><a asp-action="MyRequests" asp-controller="Clients">Search</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="MyOffers" asp-controller="Clients"><i class="bi bi-money"></i> Offers <span class="arrow">></span></a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="HaveOffer" asp-controller="Clients">Book</a></li>
                        <li><a asp-action="MyOffers" asp-controller="Clients">Search</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="MyDeliveries" asp-controller="Clients"><i class="bi bi-money"></i> Deliveries <span class="arrow">></span></a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchDelivery" asp-controller="Clients">Track</a></li>
                        <li><a asp-action="MyDeliveries" asp-controller="Clients">Search</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="MyInvoices" asp-controller="Clients"><i class="bi bi-money"></i> Invoices <span class="arrow">></span></a>
            </li>
        </ul>
    </aside>

    <div class="main-content">
        <div class="delivery-details-container">
            <div class="card">
                <div class="details-header">
                    <img src="https://via.placeholder.com/100" alt="Delivery Image" class="delivery-image">
                    <h2><b>@Model.ReferenceNumber</b></h2>
                </div>

                <div class="button-tabs">
                    <button class="tab-button" id="vehicleBtn">INFO</button>
                    <button class="tab-button" id="addressesBtn">ADDRESSES</button>
                    <button class="tab-button" id="metricsBtn">METRICS</button>
                    <button class="tab-button" id="statusBtn">STATUS</button>
                    <button class="tab-button" id="invoicesBtn">INVOICES</button>

                </div>

                <div id="vehicleSection" class="section d-none">
                    <div class="vehicles-section-header">
                       
                        <h4><b>Delivery info</b></h4>
                    </div>
                    <p><strong>Offer was made on:</strong> @Model.OfferDate</p>
                    <p><strong>Days till payment:</strong> @Model.DaysTillPayment</p>
<p><strong>Given price in request:</strong> @Model.ApproximatePrice </p>
                    <p><strong> Accepted price:</strong> @Model.FinalPrice</p>
                    <div class="ratings">
                        @if(Model.HasRated == true)
						{
                            <p>
                                <strong>Rating:</strong>
                                <div class="star-rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <label class="star @((i <= Model.RatingStars) ? "rated" : "")">☆</label>
                                    }
                                </div>
                            </p>
                            <p><strong>Comment:</strong> @Model.Comment</p>
						}
						else
						{
                            <form asp-action="LeaveRating" asp-controller="Clients" asp-route-id="@Model.Id" method="post">
                                <div class="form-group">
                                    <label asp-for="Comment">Comment</label>
                                    <textarea id="Comment" asp-for="Comment" class="form-control"></textarea>
                                </div>
                                <div class="form-group">
                                    <label><strong>Rate the service:</strong></label>
                                    <div class="star-rating">
                                        <input type="radio" id="star5" name="rating" value="5" />
                                        <label for="star5">☆</label>
                                        <input type="radio" id="star4" name="rating" value="4" />
                                        <label for="star4">☆</label>
                                        <input type="radio" id="star3" name="rating" value="3" />
                                        <label for="star3">☆</label>
                                        <input type="radio" id="star2" name="rating" value="2" />
                                        <label for="star2">☆</label>
                                        <input type="radio" id="star1" name="rating" value="1" />
                                        <label for="star1">☆</label>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-primary">Submit Rating</button>
                            </form>
						})
                    </div>
                </div>

                <div id="addressesSection" class="section d-none">

                    <div class="addresses-container">
                        <div class="address-column">
                            <h4><b>Pickup Address</b></h4>
                            <p><strong>Street:</strong> @Model.PickupStreet</p>
                            <p><strong>City:</strong> @Model.PickupCity</p>
                            <p><strong>Country:</strong> @Model.PickupCountry</p>
                            <p><strong>Latitude:</strong> @Model.PickupLatitude</p>
                            <p><strong>Longitude:</strong> @Model.PickupLongitude</p>
                            @*<div id="pickupMap" class="map"></div>*@
                        </div>

                        <div class="address-column">
                            <h4><b>Delivery Address</b></h4>
                            <p><strong>Street:</strong> @Model.DeliveryStreet</p>
                            <p><strong>City:</strong> @Model.DeliveryCity</p>
                            <p><strong>Country:</strong> @Model.DeliveryCountry</p>
                            <p><strong>Latitude:</strong> @Model.DeliveryLatitude</p>
                            <p><strong>Longitude:</strong> @Model.DeliveryLongitude</p>
                            @*<div id="deliveryMap" class="map"></div>*@
                        </div>
                    </div>
                </div>

                <div id="metricsSection" class="section  d-none">
                    <div class="metrics-header">


                        <div class="metrics-header-row">
                            <h4><b>Type of Goods</b></h4>
                            <p>@Model.TypeOfGoods</p>
                        </div>
                    </div>
                    <div class="special-instructions">
                        <h4><b>Special Instructions</b></h4>
                        <p>@Model.SpecialInstructions</p>
                    </div>

                    <div class="metrics">
                        <h4><b>Standard Metrics</b></h4>
                    </div>
                    <div class="standart-metrics-header-row">
                        <p><b>Number</b></p>
                        <p><b>Length</b></p>
                        <p><b>Width</b></p>
                        <p><b>Height</b></p>
                        <p><b>Weight</b></p>
                        <p><b>Stackable</b></p>
                    </div>
                    <div class="standart-metrics-info-row">
                        <p>@Model.NumberOfPallets</p>
                        <p>@Model.PalletLength</p>
                        <p>@Model.PalletWidth</p>
                        <p>@Model.PalletHeight</p>
                        <p>@Model.WeightOfPallets</p>
                        <p>@Model.PalletsAreStackable</p>

                    </div>
                    <div class="metrics">
                        <h4><b>Non-Standart Metrics</b></h4>
                    </div>

                    @foreach (var item in Model.NonStandardCargos)
                    {
                        <div class="non-standart-metrics-header-row">
                            <p><b>Length</b></p>
                            <p><b>Width</b></p>
                            <p><b>Height</b></p>
                            <p><b>Weight</b></p>
                            <p><b>Description</b></p>
                        </div>
                        <div class="non-standart-metrics-info-row">
                            <p>@item.Length</p>
                            <p>@item.Width</p>
                            <p>@item.Height</p>
                            <p>@item.Weight</p>
                            <p>@item.Description</p>

                        </div>
                    }
                    <div class="metrics">
                        <h4><b>More Info</b></h4>
                    </div>
                    <div class="more-header-row">
                        <p><b>Refrigerated</b></p>
                        <p><b>Shared</b></p>
                    </div>
                    <div class="more-info-row">
                        <p>@Model.IsRefrigerated</p>
                        <p>@Model.SharedTruck</p>
                    </div>
                </div>


                <div id="statusSection" class="section d-none">
                    <div class="status-header">
                        <div class="status-header-row">
                            <h4>Expected delivery date</h4>
                            <hp>@Model.ExpectedDeliveryDate</hp>
                        </div>
                        @if (Model.DeliveryStep == 4)
                        {
                            <div class="status-header-row">
                                <h4>Actual delivery date</h4>
                                <hp>@Model.ActualDeliveryDate</hp>
                            </div>
                        }
                        
                    </div>


                    <div class="delivery-steps">
                        @{
                            var steps = new[] { "Booked", "Collected", "In Transit", "Delivered" };
                            var currentStep = Model.DeliveryStep;
                        }

                        @for (int i = 0; i < steps.Length; i++)
                        {
                            var isCompleted = i + 1 <= currentStep;
                            var dotClass = isCompleted ? "step-dot completed" : "step-dot";
                            var lineClass = i < steps.Length - 1 ? (isCompleted ? "step-line completed" : "step-line") : "";

                            <div class="step-container">
                                <div class="step-dot">
                                    <div class="@dotClass"></div>
                                    @if (i < steps.Length - 1)
                                    {
                                        <div class="@lineClass"></div>
                                    }
                                </div>
                                <div class="step-text">
                                    <img src="path/to/@steps[i].ToLower().Replace(" ", "_")-icon.jpg" alt="@steps[i] Icon">
                                    <p>@steps[i]</p>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Movement History -->
                    <div class="movement-history">
                        <h4>Movement Updates</h4>
                        <div class="movement-header">
                            <p>Status</p>
                            <p>Location</p>
                            <p>Timestamp</p>
</div>
                        <div class="movement-rows">
                            @foreach (var movement in Model.DeliveryTrackings)
                            {
                                <div class="movement-row">
                                    <div class="movement-event">
                                        <div class="movement-dot-line">
                                        <div class="movement-dot"></div>
                                        <div class="event-line"></div>
                                        </div>
                                        <p>@movement.StatusUpdate</p>
                                    </div>
                                    <p class="movement-location">@movement.Address</p>
                                    <p class="movement-time">@movement.Timestamp</p>
                                </div>
                            }
                        </div>
                    </div>

                </div>
                <div id="invoicesSection" class="section d-none invoices">
                    <div class="address-column">
                        <h4><b>Invoices</b></h4>
                    </div>
                    <div class="standart-metrics-header-row">
                        <p><b>Number</b></p>
                        <p><b>Date</b></p>
                        <p><b>Description</b></p>
                        <p><b>Status</b></p>
                        <p><b>File</b></p>
                    </div>
                    <div class="standart-metrics-info-row">
                        <p>@Model.Invoice.Number</p>
                        <p>@Model.Invoice.Date</p>
                        <p>@Model.Invoice.Description</p>
                        <p>@Model.Invoice.IsPaid</p>
                        <p>
                            <a href="@Model.Invoice.FileUrl" target="_blank" class="file-icon" title="View or Download File">
                                <i class="fas fa-file-download"></i> See
                            </a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#vehicleBtn').click(function () {
                showSection('#vehicleSection');
            });
            $('#addressesBtn').click(function () {
                showSection('#addressesSection');
                initPickupMap();
                initDeliveryMap();
            });
            $('#metricsBtn').click(function () {
                showSection('#metricsSection');
            });
            $('#statusBtn').click(function () {
                showSection('#statusSection');
            });
            $('#invoicesBtn').click(function () {
                showSection('#invoicesSection');
            });

            function showSection(sectionId) {
                $('.section').addClass('d-none');
                $(sectionId).removeClass('d-none');
            }
        });
    </script>
    <script>
        async function fetchLocation(lat, long) {
            const apiKey = 'AIzaSyDfA3_DsCdEYZeSpUwLBSenw1Gyp1VGIp4';
            const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${apiKey}`;

            try {
                const response = await fetch(url);
                const data = await response.json();

                if (data.results && data.results.length > 0) {
                    const address = data.results[0].formatted_address;
                    document.getElementById('location').textContent = address;
                } else {
                    document.getElementById('location').textContent = "Unable to retrieve location.";
                }
            } catch (error) {
                console.error("Error fetching location:", error);
                document.getElementById('location').textContent = "Error fetching location.";
            }

            showCurrentTime();
        }


        function initPickupMap() {
            const pickupLatLng = { lat: @Model.PickupLatitude, lng: @Model.PickupLongitude };

            const pickupMap = new google.maps.Map(document.getElementById("pickupMap"), {
                zoom: 12,
                center: pickupLatLng,
            });

            new google.maps.Marker({
                position: pickupLatLng,
                map: pickupMap,
                title: "Pickup Location",
            });
        }

        function initDeliveryMap() {
            const deliveryLatLng = { lat: @Model.DeliveryLatitude, lng: @Model.DeliveryLongitude };

            const deliveryMap = new google.maps.Map(document.getElementById("deliveryMap"), {
                zoom: 12,
                center: deliveryLatLng,
            });

            new google.maps.Marker({
                position: deliveryLatLng,
                map: deliveryMap,
                title: "Delivery Location",
            });
        }

        setInterval(() => {
            document.getElementById("currentTime").innerText = new Date().toLocaleString();
        }, 1000);
                                }); document.querySelectorAll('.tab-button').forEach(button => {
            button.addEventListener('click', function () {
                document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
            });
        });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>


</body>
</html>


